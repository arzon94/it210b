
<%/****************************************************************************************
 This comment is inside JavaScript exit marks, so it will not render on that HTML page.  
 This page contains the HTML for the /memes path.  This page is populated with images from
 the database.  There is a real life element to this page which you will explore and 
 utilize in Part 1 of this lab.  The extension EJS stands for Embedded JavaScript and 
 is HTML built by JavaScript. (similar to when we used PHP combined with HTML) Populate this
 page similar to memes.ejs but with images from a single user instead of all users. 
 ***************************************************************************************/%>

<!DOCTYPE html>
<html>
<head>


  <meta charset='utf-8'/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script type='text/javascript' src="http://code.jquery.com/jquery-latest.min.js"></script>
  <script type='text/javascript' src='/js/bootstrap.min.js'></script>
  <script type='text/javascript' src="/socket.io/socket.io.js"></script>

  <link rel='stylesheet' type='text/css' href='/css/bootstrap.min.css'/>
  <link rel='stylesheet' type='text/css' href='/css/bootstrap-responsive.min.css'/>
  <link rel='stylesheet' type='text/css' href='/css/style.css'/>

  <title>MEMES!</title>

</head>
  <body class="bd" background="../../images/awesome.jpg">

  <div class='navbar navbar-inverse'>
    <div class='navbar-inner'>
      <div class='container'>
        <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <div class='nav-collapse collapse'>
          <ul class='nav'>
            <li id='home-nav-item'><a href='/memes'>Memes</a></li>
            <li id='home-nav-item'><a href='/login'>Login</a></li>

          </ul>
          <ul class='nav pull-right'>
            <li><a href='#'>Welcome

<!--You will want to add code here (PART 2) to allow you to display a custom message if a user is logged in (Welcome Bob!) or a generic message if no one is logged into the site (Welcome Guest User).  Similarly,
if a user is not logged in you want a login button to display and no logout button, but if a user is logged in then you want to display a logout button.  You may need to break in and out of Node JS several times using "< % % >" and "< %= % >"-->

            </a></li>
          </ul>
        </div>
      </div>
    </div>
  </div>
  <div class="row-fluid">
    <div id="wrapper">
      <div id="columns">
        <%console.log(imageList.length);%>
        <%for(i=0; i < imageList.length; i++ ){ %>
          <div ID = "id=block" + imageList[i].imageId%>
          <!-- Here is are examples of printing out a variable's value with "< %= % >" -->
          <div class="pin back-image" <%=divID%>>
            <img src="<%=imageList[i].imagePath%>"   alt="<%=imageList[i].altText%>">
            
            <button class="btn btn-primary btn-mini float-left" id="like<%=imageList[i].imageId %>" type="button" onClick="updateLikeCount(<%=imageList[i].imageId%>, this.id);">Likes: <%=imageList[i].numLikes%></button><br>
            
          </div>
        <% } %>
      </div>  
    </div>
  </div>

  <script>
    // creating a new websocket
    var socket = io.connect('http://localhost:1337');
      
    // on notification (socket updated) add the new meme(s) inside the '#columns' div. This notification is coming from server.js

      socket.on('notification', function (data) {
        var imagesListLength = data.images.length;
        var image = data.images;
        var user = data.users;  

      });
  

  
    // This function is called when the like button is clicked (see above where like button is added).
      function updateLikeCount(imageId, buttonId){
    
        //You will need to use socket.emit to send information to the server (server.js).  Use the function name (also called 'tag') 'button_click'.  
      }


    
    // This function runs at the return of updateLikeCount (above) after it runs through the server.js file
      socket.on('return_click', function (newImage, imageId){
    
        //You will need to add jquery here to update the text for the button containing the like count. 
      });

    </script>


  </body>

</html>
